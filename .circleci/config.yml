version: 2.1
commands:
  docker_login:
    parameters:
      gcloud_auth_var_name:
        type: string
        default: ""
    steps:
      - run:
          name: extract auth json to file and login
          command: |
            GOOGLE_APPLICATION_CREDENTIALS="/tmp/gac-$(date +%s).json"
            echo "${<<parameters.gcloud_auth_var_name>>}" | base64 -d > $GOOGLE_APPLICATION_CREDENTIALS
            cat $GOOGLE_APPLICATION_CREDENTIALS | docker login -u _json_key --password-stdin https://gcr.io
            rm ${GOOGLE_APPLICATION_CREDENTIALS}
jobs:      
  deploy-staging:
    working_directory: ~/deployments/gpu-operator
    docker:
    - image: circleci/golang:1.15
    steps:
    - checkout
    - setup_remote_docker
    - docker_login:
        gcloud_auth_var_name: STAGING_GCLOUD_SERVICE_JSON_CONTENT
    - run:
        name: build
        command: make build
        environment:
          ENVRIONMENT: staging
          VERSION: <<pipeline.git.revision>>
    - run:
        name: deploy
        command: echo x
        environment:
          ENVRIONMENT: staging
          VERSION: <<pipeline.git.revision>>
  deploy-production:
    working_directory: ~/deployments/gpu-operator
    docker:
    - image: circleci/golang:1.15
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: "Extract gcloud private key to file"
        command: echo "$PRODUCTION_GCLOUD_SERVICE_JSON_CONTENT" | base64 -d > ./my.json
    - run:
        name: build
        command: make build
        environment:
          ENVRIONMENT: prod
          VERSION: <<pipeline.git.tag>>
    - run:
        name: deploy
        command: echo x
        environment:
          ENVRIONMENT: prod
          VERSION: <<pipeline.git.tag>>

workflows:
  version: 2  
  deploy:
    jobs:
      - deploy-staging:
          filters:
            branches:
              only:
                - master
      - deploy-production:
          filters:
                tags:
                  only: /^v.*/
                branches:
                  ignore: /.*/

